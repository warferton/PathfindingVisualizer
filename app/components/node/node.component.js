import { forwardRef } from 'react';
import styles from '../../styles/Node.module.css';

const Node = forwardRef( (props, ref) => {

    let style = '';

    const {
        x,
        y,
        weight,
        role,
        visited,
        wall,
        mouseDown,
        mouseEnter,
        mouseLeave
    } = props


    if(role == 'START') style = styles.startNode;
    
    else if(role == 'GOAL') style = styles.goalNode;
    
    else if(wall) style = styles.wallNode;
    
    else if(visited) style = styles.visitedNode;

    if(weight > 1){
        style = styles.weightNode;
    }

        const weight_icon = 
            <svg 
            className={styles.weightIcon}
            width="20" 
            height="20" 
            viewBox="0 0 90 75" 
            fill="none" 
            xmlns="http://www.w3.org/2000/svg">
                <mask
                id="path-1-inside-1"
                fill="white">
                <path 
                d="M5.35714 7.65306L11.4796 0H64.2857L69.6429 7.65306V35.9694L75 39.7959V62.7551L69.6429 68.8775L60.4592 75H11.4796L5.35714 68.8775L0 62.7551V41.3265L5.35714 35.9694V7.65306Z"/>
                </mask>
                <path 
                d="M69.6429 35.9694H71.8929V35.0374L71.2338 34.3784L69.6429 35.9694ZM5.35714 35.9694L3.76615 34.3784L3.10714 35.0374V35.9694H5.35714ZM11.4796 10.7143L9.60748 9.46621L9.22959 10.033V10.7143H11.4796ZM14.5408 6.12245V3.87245H13.3367L12.6687 4.87437L14.5408 6.12245ZM60.4592 6.12245L62.2161 4.71688L61.5406 3.87245H60.4592V6.12245ZM63.5204 9.94898H65.7704V9.15972L65.2774 8.54342L63.5204 9.94898ZM14.5408 35.9694V33.7194H12.2908V35.9694H14.5408ZM60.4592 35.9694H62.7092V33.7194H60.4592V35.9694ZM60.4592 62.7551V65.0051H62.7092V62.7551H60.4592ZM14.5408 62.7551H12.2908V65.0051H14.5408V62.7551ZM37.5 44.3878L39.276 43.0064L35.676 43.0704L37.5 44.3878ZM27.551 58.1633L25.5386 59.1695L27.2 62.4923L29.375 59.4806L27.551 58.1633ZM48.2143 58.1633L46.4382 59.5446L48.7228 62.4819L50.2626 59.0943L48.2143 58.1633ZM71.2338 34.3784L65.1114 28.2559L61.9294 31.4379L68.0519 37.5604L71.2338 34.3784ZM63.5204 27.5969H11.4796V32.0969H63.5204V27.5969ZM9.8886 28.2559L3.76615 34.3784L6.94813 37.5604L13.0706 31.4379L9.8886 28.2559ZM3.10714 35.9694V68.8775H7.60714V35.9694H3.10714ZM71.8929 68.8775V35.9694H67.3929V68.8775H71.8929ZM13.7296 29.8469V10.7143H9.22959V29.8469H13.7296ZM13.3517 11.9624L16.4129 7.37052L12.6687 4.87437L9.60748 9.46621L13.3517 11.9624ZM14.5408 8.37245H60.4592V3.87245H14.5408V8.37245ZM58.7022 7.52801L61.7635 11.3545L65.2774 8.54342L62.2161 4.71688L58.7022 7.52801ZM61.2704 9.94898V29.8469H65.7704V9.94898H61.2704ZM14.5408 38.2194H60.4592V33.7194H14.5408V38.2194ZM58.2092 35.9694V62.7551H62.7092V35.9694H58.2092ZM60.4592 60.5051H14.5408V65.0051H60.4592V60.5051ZM16.7908 62.7551V35.9694H12.2908V62.7551H16.7908ZM35.676 43.0704L25.727 56.8459L29.375 59.4806L39.324 45.7051L35.676 43.0704ZM29.5635 57.157L21.1451 40.3203L17.1202 42.3328L25.5386 59.1695L29.5635 57.157ZM35.724 45.7691L46.4382 59.5446L49.9903 56.7819L39.276 43.0064L35.724 45.7691ZM50.2626 59.0943L57.9157 42.2576L53.819 40.3955L46.166 57.2322L50.2626 59.0943ZM5.35714 7.65306L1.84323 4.84193L0.857143 6.07455V7.65306H5.35714ZM11.4796 0V-4.5H9.31678L7.96568 -2.81113L11.4796 0ZM64.2857 0L67.9723 -2.58058L66.6287 -4.5H64.2857V0ZM69.6429 7.65306H74.1429V6.23456L73.3294 5.07248L69.6429 7.65306ZM69.6429 35.9694H65.1429V38.2852L67.0273 39.6312L69.6429 35.9694ZM5.35714 35.9694L8.53912 39.1514L9.85714 37.8333V35.9694H5.35714ZM5.35714 68.8775L1.97055 71.8408L2.06921 71.9536L2.17516 72.0595L5.35714 68.8775ZM11.4796 75L8.29761 78.182L9.61563 79.5H11.4796V75ZM60.4592 75V79.5H61.8217L62.9553 78.7442L60.4592 75ZM69.6429 68.8775L72.139 72.6218L72.6361 72.2904L73.0294 71.8408L69.6429 68.8775ZM75 39.7959H79.5V37.4801L77.6156 36.1341L75 39.7959ZM75 62.7551L78.3866 65.7184L79.5 64.4459V62.7551H75ZM0 62.7551H-4.5V64.4459L-3.38659 65.7184L0 62.7551ZM0 41.3265L-3.18198 38.1446L-4.5 39.4626V41.3265H0ZM8.87105 10.4642L14.9935 2.81113L7.96568 -2.81113L1.84323 4.84193L8.87105 10.4642ZM11.4796 4.5H64.2857V-4.5H11.4796V4.5ZM60.5992 2.58058L65.9563 10.2336L73.3294 5.07248L67.9723 -2.58058L60.5992 2.58058ZM65.1429 7.65306V35.9694H74.1429V7.65306H65.1429ZM9.85714 35.9694V7.65306H0.857143V35.9694H9.85714ZM2.17516 72.0595L8.29761 78.182L14.6616 71.818L8.53912 65.6956L2.17516 72.0595ZM11.4796 79.5H60.4592V70.5H11.4796V79.5ZM62.9553 78.7442L72.139 72.6218L67.1467 65.1333L57.963 71.2558L62.9553 78.7442ZM67.0273 39.6312L72.3844 43.4577L77.6156 36.1341L72.2584 32.3076L67.0273 39.6312ZM70.5 39.7959V62.7551H79.5V39.7959H70.5ZM71.6134 59.7918L66.2563 65.9143L73.0294 71.8408L78.3866 65.7184L71.6134 59.7918ZM8.74374 65.9143L3.38659 59.7918L-3.38659 65.7184L1.97055 71.8408L8.74374 65.9143ZM4.5 62.7551V41.3265H-4.5V62.7551H4.5ZM3.18198 44.5085L8.53912 39.1514L2.17516 32.7874L-3.18198 38.1446L3.18198 44.5085Z" 
                fill="#FFA600" 
                mask="url(#path-1-inside-1)"/>
            </svg>;

      
    return(
        <div 
        className={styles.node + " " + style} 
        ref = { ref }
        onMouseDown = { () => mouseDown(x, y) }
        onMouseEnter = { () => mouseEnter(x, y) }
        onMouseLeave = { () => mouseLeave(x, y) }
        >
            {
                weight > 1 && weight_icon
            }
        </div>
    )

})

export default Node;